package demo:forms;

interface types {

  use wurbo-in.{listen-details, file-details};

  // Context for the minijinja rendering
  record page {
    title: string
  }

  record input {
    placeholder: string
  }

  record output {
    // the resulting value of the total outputs combined
    value: option<string>,
    // optional id string: None is intial render, Some for update value
    id: option<string>,
    // the output dest for the username changes
    username: option<string>,
    // the output dest for the password changes
    password: option<string>
  }

  // COntent for the entire page
  record content {
    page: page,
    input: input,
    output: option<output>,
  }

  /// example of a variant
  variant example {
    an-input(string),
    some-bytes(list<u8>)
  }

  // Context variants
  variant context {
    all-content(content),
    username(string),
    password(string),
    example-variant(example),
    file(file-details)
  }

}

interface wurbo-in {

  // Details required in order to add an event listener to an element
  record listen-details {
    selector: string,
    ty: string,
  }

  /// Content for a file, bytes and name
  record file-details {
    /// The bytes of the file
    bytes: list<u8>,
    /// The name of the file
    filename: string
  }


  // Add an event listener to the given element
  addeventlistener: func(details: listen-details);

}

interface wurbo-out {

  use types.{context};

  // Optionally customize the configuration of the templates used to render the component
  customize: func(templates: list<tuple<string, string>>) -> result<_, string>;

  // renders the initial Web component with the given data
  // and the target template to use as top level entry point
  render: func(ctx: context) -> result<string, string>;

  // activate listening 
  activate: func(selectors: option<list<string>>);

  /// Removes a listener from the list of selectors
  deactivate: func(selector: string);
}

/// An example world for the component to target.
world main {
  import wurbo-in;
  export wurbo-out;
}
